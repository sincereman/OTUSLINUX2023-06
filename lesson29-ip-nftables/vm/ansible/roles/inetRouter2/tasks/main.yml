---
#install netplan

- name: Install netplan
  apt:
    name: "netplan.io"
    state: present
    update_cache: yes
  become: true
  tags:
    - netplaninstall
    - inetRouter

#install mtr utility
- name: Install MTR for Troubleshootings
  apt:
    name: mtr
    state: present
  tags:
    - mtr
    - inetrouter

#disabled nft fw
- name: Firewall NFT
  service:
    name: nftables
    enabled: no
    state: stopped
  notify:
    - systemctl daemon reload
  tags:
    - firewall-nft-off
    - inetrouter



#disable ufw firewall
- name: Disable ufw services if enabled
  shell: "if systemctl is-enabled --quiet {{ item }}; then systemctl disable {{ item }} && echo disable_ok ; fi"
  register: output
  changed_when: "'disable_ok' in output.stdout"
  loop:
    - ufw
  tags:
    - ufwoff
    - inetrouter

#install iptables
- name: Install iptables
  apt:
    name: iptables
    state: present
  tags:
    - iptables
    - inetrouter

#install iptables-persistent
- name: Install iptables
  apt:
    name: iptables-persistent
    state: present
  tags:
    - iptables
    - inetrouter


# #setup NAT rules for iptables
# - name: Set up NAT on inetRouter
#   template: 
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     owner: root
#     group: root
#     mode: "{{ item.mode }}"
#   notify:
#     - systemctl daemon reload
#     - startiptables
#   with_items:
#     - { src: "files/iptables_rules.ipv4", dest: "/etc/iptables/rules.v4", mode: "0644" }
#   when: (ansible_hostname == "inetRouter")


# - name: iptables masquerading
#   iptables:
#     table: nat
#     chain: POSTROUTING
#     destination: "!192.168.0.0/16"
#     out_interface: eth0
#     jump: MASQUERADE
#   tags:
#     - inetrouter
#     - iptables-minetrouter

#enable forwarding for interfaces

- name: set up forward packages across routers
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: '1'
    state: present
  notify:
    - systemctl daemon reload



#disable default route
- name: disable default route
  template: 
    src: files/00-installer-config.yaml
    dest: /etc/netplan/00-installer-config.yaml
    owner: root
    group: root
    mode: 0644
  when: (ansible_hostname != "inetRouter") 

- name: add default gateway for Routers
  template: 
    src: "files/netplan_{{ansible_hostname}}.yaml"
    dest: /etc/netplan/50-vagrant.yaml
    owner: root
    group: root
    mode: 0644

- name: Apply and reload the new config address with netplan
  command: netplan apply
  become: true
  async: 100
  poll: 0


# add forwarding port


- name: iptables dnat
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    destination_port: 8080
    to_destination: "192.168.0.2:80"
    jump: DNAT
  tags:
    - deploy
    - iptables-dnat

- name: iptables snat
  iptables:
    table: nat
    chain: POSTROUTING
    protocol: tcp
    destination_port: 80
    to_source: "192.168.255.67"
    jump: SNAT
  tags:
    - iptables-snat

- name: start iptables
  systemd:
    name: iptables
    enabled: yes
    state: started  
