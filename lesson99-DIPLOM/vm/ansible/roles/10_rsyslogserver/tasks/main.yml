---

## Base configure


##Set timezone
- name: set timezone
  shell: timedatectl set-timezone Europe/Moscow

#Install Chrony to time Sync

- name: Synchronize datetime | Install chrony
  apt:
    name: chrony
    state: latest
  tags:
    - backupserver-datesync

#Enable Chrony Services to time Sync

- name: Synchronize datetime | Turn on chronyd
  service:
    name: chronyd
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - backupserver-datesync


# Устанавливаем инструменты анализа сети
- name: install base tools
  apt:
    name:
      - traceroute
      - tcpdump
      - net-tools
      - mtr
      - curl
      - iperf3
    state: present
    update_cache: true
  tags:
    - netanalize


#install NetworkManager


- name: Install NetworkManager
  apt:
    name: network-manager
    state: present
  tags:
    - NetworkManager

- name: Enable Networkmanager
  service:
    name: NetworkManager
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - NetworkManager

#disable ufw firewall
- name: Disable ufw services if enabled
  shell: "if systemctl is-enabled --quiet {{ item }}; then systemctl disable {{ item }} && echo disable_ok ; fi"
  register: output
  changed_when: "'disable_ok' in output.stdout"
  loop:
    - ufw
  tags:
    - ufwoff
    - netanalize





# Move file ifupdown

- name: Check if file exists
  ansible.builtin.stat:
    path: "/etc/network/interfaces"
  register: check_file_name

- name: print debug
  ansible.builtin.debug:
     var: check_file_name

- name: Copy file with new name
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/network/interfaces"
    dest: "/etc/network/interfaces.save"
  when: check_file_name.stat.exists

- name: Remove old file
  ansible.builtin.file:
    path: "/etc/network/interfaces"
    state: absent
  when: check_file_name.stat.exists

- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted


#NMCLI Set interface


- name: Add an Ethernet ETH0 low priority
  community.general.nmcli:
    conn_name: eth0
    ifname: eth0
    type: ethernet
    method4: "auto"
    route_metric4: 300
    state: present
  tags: eth0

- name: Add an Ethernet LAN222 connection with static IP configuration
  community.general.nmcli:
    conn_name: eth1
    ifname: eth1
    type: ethernet
    ip4: 192.168.225.50/24
    gw4: 192.168.225.254
    route_metric4: 100
    state: present
  tags: eth1



- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted


#nmcli networking off && nmcli networking on

- name: nmcli networking off 
  shell: 
    cmd: nmcli networking off && nmcli networking on

- name: Gather current interface configuration
  shell: 
    cmd: nmcli
  register: nmcli_conn

- name: STDOUT nmcli_conn
  debug: 
    msg: "{{ nmcli_conn.stdout_lines }}"


 ## Rsyslog Server

- name: Install the latest version of Rsyslog
  ansible.builtin.apt:
    name: rsyslog
    state: latest
  tags:
    - rsyslog-apt-install
    - rsyslog-server-configure

- name: Remove file /etc/rsyslog.d/
  file:
    state: "{{ item }}"
    path: "/etc/rsyslog.d/"
    owner: root
    group: root
    mode: '0755'
  with_items:
    - absent
    - directory
  tags:
    - rsyslog-rules-configure
    - clear-etc-rsyslogd

- name: Remove file /var/log/rsyslog/
  file:
    state: "{{ item }}"
    path: "/var/log/rsyslog/"
    owner: root
    group: root
    mode: '0755'
  with_items:
    - absent
    - directory
  tags:
    - testdelete
    - rsyslog-rules-configure
    - clear-etc-rsyslogd



- name: Copy ./rsyslog.conf to /etc/rsyslog.conf
  copy:
    src: ../files/etc/rsyslog/rsyslog.conf
    dest: /etc/rsyslog.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify:
    - systemctl daemon reload
    - service restart rsyslog
  tags:
    - rsyslog-server-configure
    - copy-rsyslog-conf


- name: Rsyslog Template Ipsec Style
  template:
    src: ../files/etc/rsyslog/template/{{ file }}
    dest: /etc/rsyslog.d/{{ file }}
  vars:
    file: "rsyslogipsec.conf"
  notify:
    - systemctl daemon reload
    - service restart rsyslog
  tags:
    - rsyslog-server-configure
    - copy-rsyslog-template-otus


# - name: Rsyslog | open TCP ports
#   shell: "{{item}}"
#   with_items: 
#     - iptables -A INPUT -p tcp --dport 514 -j ACCEPT
#     - exit 0
#   tags:
#     - rsyslog-server-configure
#     - rsyslog-enable-tcp
#     - open-tcp-ports

- name: Restart service rsyslog, in all cases
  ansible.builtin.service:
    name: rsyslog
    state: restarted

- name: check if rsyslog has port 514 open
  shell: ss -lntup | grep rsyslogd
  register: rsyslog_response
  tags:
    - rsyslog-server-configure
    - test-rsyslog-port

- name: Check port
  fail:
    msg: 'The system detected as fail: 514 doesnt listen'
  when: rsyslog_response.stdout == ""
  tags:
    - rsyslog-server-configure
    - test-rsyslog-port



## NFTables

- name: Enable NFTables
  service:
    name: nftables
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - nftables


- name: Copy NFTables rules
  copy: 
    src: "files/nftables.conf"
    dest: /etc/nftables.conf
    owner: root
    group: root
    mode: 0744
  notify: RestartNFTables
  tags: nftconfig



