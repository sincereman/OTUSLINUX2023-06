---
##Set timezone
- name: set timezone
  shell: timedatectl set-timezone Europe/Moscow

#Install Chrony to time Sync

- name: Synchronize datetime | Install chrony
  apt:
    name: chrony
    state: latest
  tags:
    - backupserver-datesync

#Enable Chrony Services to time Sync

- name: Synchronize datetime | Turn on chronyd
  service:
    name: chronyd
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - backupserver-datesync


# Устанавливаем инструменты анализа сети
- name: install base tools
  apt:
    name:
      - traceroute
      - tcpdump
      - net-tools
      - mtr
      - curl
      - iperf3
    state: present
    update_cache: true
  tags:
    - netanalize



#install NetworkManager


- name: Install NetworkManager
  apt:
    name: network-manager
    state: present
  tags:
    - NetworkManager

- name: Enable Networkmanager
  service:
    name: NetworkManager
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - NetworkManager

#disable ufw firewall
- name: Disable ufw services if enabled
  shell: "if systemctl is-enabled --quiet {{ item }}; then systemctl disable {{ item }} && echo disable_ok ; fi"
  register: output
  changed_when: "'disable_ok' in output.stdout"
  loop:
    - ufw
  tags:
    - ufwoff
    - inetrouter


 #enable forwarding for interfaces
- name: set up forward packages across routers
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
  notify:
    - systemctl daemon reload


#enable forwarding for interfaces
- name: set up forward packages across routers
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: '1'
    state: present
  notify:
    - systemctl daemon reload

#enable forwarding 6 for interfaces
- name: set up forward 6 packages across routers
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '1'
    state: present
  notify:
    - systemctl daemon reload


#disable do not accept ICMP redirects 
- name: disable do not accept ICMP redirects 
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '0'
    state: present
  notify:
    - systemctl daemon reload


#disable do not accept ICMP redirects 
- name: disable do not accept ICMP redirects 
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
  notify:
    - systemctl daemon reload



# Move file ifupdown

- name: Check if file exists
  ansible.builtin.stat:
    path: "/etc/network/interfaces"
  register: check_file_name

- name: print debug
  ansible.builtin.debug:
     var: check_file_name

- name: Copy file with new name
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/network/interfaces"
    dest: "/etc/network/interfaces.save"
  when: check_file_name.stat.exists

- name: Remove old file
  ansible.builtin.file:
    path: "/etc/network/interfaces"
    state: absent
  when: check_file_name.stat.exists

- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted


#NMCLI Set interface


- name: Add an Ethernet ETH0 low priority
  community.general.nmcli:
    conn_name: eth0
    ifname: eth0
    type: ethernet
    method4: "auto"
    route_metric4: 300
    state: present
  tags: eth0

- name: Add an Ethernet LAN222 connection with static IP configuration
  community.general.nmcli:
    conn_name: eth1
    ifname: eth1
    type: ethernet
    ip4: 10.99.1.222/24
    gw4: 10.99.1.254
    route_metric4: 100
    state: present
  tags: eth1

- name: Add an Ethernet WAN1 with static IP configuration
  community.general.nmcli:
    conn_name: eth2
    ifname: eth2
    type: ethernet
    ip4: 192.168.222.254/24
    state: present
  tags: eth2



- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted


#nmcli networking off && nmcli networking on

- name: nmcli networking off 
  shell: 
    cmd: nmcli networking off && nmcli networking on

- name: Gather current interface configuration
  shell: 
    cmd: nmcli
  register: nmcli_conn

- name: STDOUT nmcli_conn
  debug: 
    msg: "{{ nmcli_conn.stdout_lines }}"


#Install IPSEC

- name: Install Strongswan package
  apt:
    name: strongswan
    state: present

- name: Enable IPSEC Service
  service:
    name: ipsec
    enabled: true
  notify:
    - restart IPSEC   


- name: Recursively remove directory /data/config
  ansible.builtin.file:
    path: /data
    state: absent
  tags:
    - webipsecconfig


- name: Creates directory /data/config
  ansible.builtin.file:
    path: /data/config
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - webipsecconfig

- name: Creates directory /data/config/bin
  ansible.builtin.file:
    path: /data/config/bin
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - webipsecconfig

- name: Creates directory /data/config/tmp
  ansible.builtin.file:
    path: /data/config/tmp
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - webipsecconfig

- name: Creates directory /data/config/install
  ansible.builtin.file:
    path: /data/config/install
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - webipsecconfig


- name: get update_run ipsec module
  get_url:
    url: https://user:user@10.99.1.225/config/bin/update_run.pl
    dest: /data/config/install/update_run_first.pl
    validate_certs: false
    mode: 0755
    owner: root
    group: root
  tags:
    - webipsecconfig

# - name: perlscript ipsec
#   ansible.builtin.shell: |
#     perl /data/config/install/update_run_first.pl &&
#     perl /data/config/bin/update_run.pl &&
#     perl /data/config/bin/run_ipsec.pl -force
#   tags:
#     - perlinstall

- name: Perl Install Ipsec Script
  shell: perl /data/config/install/update_run_first.pl
  tags:
    - perlinstall
    - perltest


- name: Perl Config Ipsec Script
  shell: perl /data/config/bin/update_run.pl && perl /data/config/bin/run_ipsec.pl -force
  tags:
    - perlconfig
    - perltest



## NFTables

- name: Enable NFTables
  service:
    name: nftables
    enabled: yes
    state: started
  notify:
    - systemctl daemon reload
  tags:
    - nftables


- name: Copy NFTables rules
  copy: 
    src: "files/nftables.conf"
    dest: /etc/nftables.conf
    owner: root
    group: root
    mode: 0744
  notify: RestartNFTables
  tags: nftconfig






 