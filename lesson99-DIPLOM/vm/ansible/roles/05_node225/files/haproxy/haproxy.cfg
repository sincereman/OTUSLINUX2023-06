global
	log /dev/log	local0
	maxconn 4000
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon


	# Default SSL material locations
	crt-base /etc/haproxy
	ca-base /etc/haproxy
    ssl-server-verify none




	#--------------------------
	# SSL tuning / hardening
	#--------------------------
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options prefer-client-ciphers

	#    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	#    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	#    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	tune.ssl.default-dh-param 2048



defaults
	log     global
	mode    http
	#option  httplog
	option  httpslog
	option  dontlognull

	option http-keep-alive
	option prefer-last-server
	option redispatch

	no option httpclose

	balance leastconn
	#option forwardfor except 127.0.0.0/8
 
	default-server inter 5s rise 2 fall 3

	retries 3
	timeout client 600s
	timeout http-request 10s
	timeout connect 10s
	timeout http-keep-alive 30m
	timeout queue           1m
	timeout client          15m # this value should be rather high with Exchange
	timeout server          15m # this value should be rather high with Exchange
	timeout http-keep-alive 10s
	timeout check           10s

	#    maxconn                 100000
	option h1-case-adjust-bogus-client

	#    errorfile 400 /etc/haproxy/errors/400.http
	#    errorfile 403 /etc/haproxy/errors/403.http
	#    errorfile 408 /etc/haproxy/errors/408.http
	#    errorfile 500 /etc/haproxy/errors/500.http
	#    errorfile 502 /etc/haproxy/errors/502.http
	#    errorfile 503 /etc/haproxy/errors/503.http
	#    errorfile 504 /etc/haproxy/errors/504.http


	#---------------------------------------------------------------------
	#HAProxy Monitoring Config
	#---------------------------------------------------------------------

listen stats
	bind :1111
	mode http
	option forwardfor
	option httpclose
	option socket-stats
	stats enable
	stats uri /
	stats refresh 5s
	stats show-legends
	stats realm Haproxy\ Statistics
	stats realm Strictly\ Private
	stats auth admin:cnfnbcnbrf

        capture request header Host len 32
        capture request header Referer len 128
        capture request header User-Agent len 128
        capture request  header X-Request-UID len 500
        capture response header Content-Length len 10
        log-format "%si:%sp\ %ci\ [%t]\ \"%r\"\ %ST\ %B\ \"%hr\""



        #-----------------------
        # WebIpsec FrontEnd Begins
        # -------------------


frontend ft_webipsec_https
        bind 10.99.1.225:80 name http
        bind 10.99.1.225:443 name https ssl crt /etc/haproxy/webipsec.pem
  
	http-response set-header X-Frame-Options SAMEORIGIN
	http-response set-header X-Content-Type-Options nosniff
	http-response set-header Strict-Transport-Security max-age=63072000

	mode http

	maxconn 4000


	#LogSettingsOverideDefault
#        capture request header Host len 32
#        capture request header User-Agent len 64
#        capture request  header X-Request-UID len 500
#        capture response header Content-Length len 10
#        log-format %ci\:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %r\ {%sslv/%sslc/%[ssl_fc_sni]/%[ssl_fc_session_id]}\ "%[capture.req.method]\ %[capture.req.hdr(0)]%[capture.req.uri]\ HTTP/1.1"
        capture request header Host len 32
	capture request header Referer len 128
	capture request header User-Agent len 128
        capture request  header X-Request-UID len 500
        capture response header Content-Length len 100
	log-format "%si:%sp\ %ci\ [%t]\ \"%r\"\ %ST\ %B\ \"%hr\" \"%hs\""

#        unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
#        unique-id-header X-Haproxy-Unique-ID






	#tcp-request content accept if { ssl_fc_has_crt }
	acl ssl_connection ssl_fc
	acl host_webipsec hdr(Host) -i 10.99.1.225
	acl path_slash path /
	http-request redirect scheme https code 302 unless ssl_connection
	http-request redirect location /config/ code 302 if path_slash host_webipsec
    bind 10.99.1.225:443 name https ssl crt /etc/haproxy/webipsec.pem

	# ACL Check a site
	acl path_config path_beg -i /config/index.html

	use_backend bk_webipsec_https_config if path_config
	default_backend bk_webipsec_https_default





	#------------------------------
	# Back-end section
	#------------------------------


backend bk_webipsec_https_config
	mode http
	#option httpchk GET /config/index.html
    #    option log-health-checks
	#http-check expect string 200\ OK
#	balance source
    balance roundrobin
	server web1 192.168.225.10:443 ssl verify none maxconn 1000 weight 10 check
	#server web2 192.168.225.11:443 ssl verify none maxconn 1000 weight 10 check



backend bk_webipsec_https_default
	mode http
#	balance source
    balance roundrobin
	server web1 192.168.225.10:443 ssl verify none maxconn 1000 weight 10 check
	#server web2 192.168.225.11:443 ssl verify none maxconn 1000 weight 10 check




# check config 
# haproxy -c -V -f /etc/haproxy/haproxy.cfg

