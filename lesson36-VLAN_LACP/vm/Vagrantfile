# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "debian/bullseye64",
        :vm_name => "inetRouter",
        :net => [
                   #["10.4.111.51", 1, "255.255.255.0", "inet"],
                   [ "127.0.0.2",  2,  "255.255.255.0",  "router-net"],
                   [ "127.0.0.3",  3,  "255.255.255.0",  "router-net"],
                   #подсеть 192.168.56.0/24 - для связи с vagrant
                   [ "192.168.56.10", 8, "255.255.255.0",    "mgmt"],
                ]
  },
  :centralRouter => {
        :box_name => "debian/bullseye64",
        :vm_name => "centralRouter",
        :net => [
                   [ "127.0.0.4",  2,  "255.255.255.0",  "router-net"],
                   [ "127.0.0.5",  3,  "255.255.255.0",  "router-net"],
                   [ "192.168.255.9",  6,  "255.255.255.252",  "office1-central"],
                   [ "192.168.56.11",  8, "255.255.255.0",    "mgmt"],
                ]
  },

  :office1Router => {
        :box_name => "debian/bullseye64",
        :vm_name => "office1Router",
        :net => [
                   [ "192.168.255.10",  2,  "255.255.255.252",  "office1-central"],
                   [ "127.0.0.5",  3,  "255.255.255.0",  "vlan10"],
                   [ "127.0.0.6",  4,  "255.255.255.0",  "vlan10"],
                   [ "127.0.0.7",  5,  "255.255.255.0",  "vlan20"],
                   [ "127.0.0.8",  6,  "255.255.255.0",  "vlan20"],
                   [ "192.168.56.20",  8, "255.255.255.0",    "mgmt"],
                ]
  },

  :testClient1 => {
        :box_name => "debian/bullseye64",
        :vm_name => "testClient1",
        :net => [
                   [ "127.0.0.9",  2,  "255.255.255.0",  "vlan10"],
                   [ "192.168.56.21",  8, "255.255.255.0",    "mgmt"],
                ]
  },


  :testServer1 => {
        :box_name => "debian/bullseye64",
        :vm_name => "testServer1",
        :net => [
                   [ "127.0.0.10",  2,  "255.255.255.0",  "vlan10"],
                   [ "192.168.56.22",  8, "255.255.255.0",    "mgmt"],
                ]
  },
  

  :testClient2 => {
        :box_name => "debian/bullseye64",
        :vm_name => "testClient2",
        :net => [
                   [ "127.0.0.11",  2,  "255.255.255.0",  "vlan20"],
                   [ "192.168.56.31",  8, "255.255.255.0",    "mgmt"],
                ]
  },


  :testServer2 => {
        :box_name => "debian/bullseye64",
        :vm_name => "testServer2",
        :net => [
                   [ "127.0.0.12",  2,  "255.255.255.0",  "vlan20"],
                   [ "192.168.56.32",  8, "255.255.255.0",    "mgmt"],
                ]
  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|
   
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      
      box.vm.provider "virtualbox" do |v|
        v.memory = 768
        v.cpus = 1
       end

      # if boxconfig[:vm_name] == "office2Server"
      #  box.vm.provision "ansible" do |ansible|
      #   ansible.playbook = "ansible/provision.yml"
      #   ansible.inventory_path = "ansible/hosts"
      #   ansible.host_key_checking = "false"
      #   ansible.limit = "all"
      #  end
      # end

      boxconfig[:net].each do |ipconf|
        box.vm.network("private_network", ip: ipconf[0], adapter: ipconf[1], netmask: ipconf[2], virtualbox__intnet: ipconf[3])
      end

      # if boxconfig.key?(:public)
      #   box.vm.network "public_network", boxconfig[:public]
      # end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL

      
      # Закомментирован блок, так как настрйка будет выполняться в ansible
      #   case boxname.to_s
      #   when "inetRouter"
      #     box.vm.provision "shell", run: "always", inline: <<-SHELL
      #       sysctl net.ipv4.conf.all.forwarding=1
      #       iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
      #       SHELL
      #   when "centralRouter"
      #     box.vm.provision "shell", run: "always", inline: <<-SHELL
      #       sysctl net.ipv4.conf.all.forwarding=1
      #       echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
      #       echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
      #       systemctl restart network
      #       SHELL
      #   when "centralServer"
      #     box.vm.provision "shell", run: "always", inline: <<-SHELL
      #       echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
      #       echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
      #       systemctl restart network
      #       SHELL
      #  end
    end
  end
end